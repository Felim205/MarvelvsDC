package com.mycompany.pp2;

import com.mycompany.pp2.clases.Usuario;
import com.mycompany.pp2.managers.UsuarioManager;
import javax.swing.*;
import java.awt.GridLayout;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabob
 */
public class UsuariosPantalla extends PantallaMadreMenues {

    /**
     * Constructor de PantallaMadreMenues
     */
    public UsuariosPantalla() {
        super();
        initComponents();
        personalizarPantalla();
        poblarLaTablaUsuarios();
        
    }
    
    private void personalizarPantalla() {
        // Cambiar el título de la ventana
        setTitle("Usuarios - MARVEL VS DC");
        // Ocultar botones no relevantes
        UsuariosBtn.setVisible(false);

    }
    
    public void poblarLaTablaUsuarios() {
        DefaultTableModel model = (DefaultTableModel) ListaUsuarios.getModel();
        model.setRowCount(0);

        for (Usuario usuario : UsuarioManager.getListaUsuarios()) {
            model.addRow(new Object[]{
                usuario.getUserName(),
                usuario.getNombre() + " " + usuario.getApellidos(),
                usuario.getCorreo(),
                "Usuario" // Placeholder para roles
            });
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AgregarBtn = new javax.swing.JButton();
        EditarBtn = new javax.swing.JButton();
        EliminarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaUsuarios = new javax.swing.JTable();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(251, 252, 254));
        setMinimumSize(new java.awt.Dimension(931, 589));
        setPreferredSize(new java.awt.Dimension(931, 589));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AgregarBtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        AgregarBtn.setText("Agregar");
        AgregarBtn.setToolTipText("");
        AgregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AgregarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, 170, 40));

        EditarBtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        EditarBtn.setText("Editar");
        EditarBtn.setToolTipText("");
        EditarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(EditarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 480, 170, 40));

        EliminarBtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        EliminarBtn.setText("Eliminar");
        EliminarBtn.setToolTipText("");
        EliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(EliminarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 170, 40));

        ListaUsuarios.setBackground(new java.awt.Color(212, 223, 241));
        ListaUsuarios.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        ListaUsuarios.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 12)); // NOI18N
        ListaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Nombre Completo", "Correo", "Rol"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ListaUsuarios);
        if (ListaUsuarios.getColumnModel().getColumnCount() > 0) {
            ListaUsuarios.getColumnModel().getColumn(3).setMinWidth(70);
            ListaUsuarios.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 770, 360));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BgUser.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarBtnActionPerformed
        JTextField txtNombre = new JTextField(15);
        JTextField txtApellidos = new JTextField(15);
        JTextField txtUserName = new JTextField(15);
        JTextField txtCorreo = new JTextField(15);
        JPasswordField txtContraseña = new JPasswordField(15);

        JPanel panel = new JPanel(new GridLayout(0, 2, 10, 10));
        panel.add(new JLabel("Nombre:"));
        panel.add(txtNombre);
        panel.add(new JLabel("Apellidos:"));
        panel.add(txtApellidos);
        panel.add(new JLabel("Username:"));
        panel.add(txtUserName);
        panel.add(new JLabel("Correo:"));
        panel.add(txtCorreo);
        panel.add(new JLabel("Contraseña:"));
        panel.add(txtContraseña);

        boolean datosValidos = false;
        while (!datosValidos) {
            int result = JOptionPane.showConfirmDialog(this, panel, "Agregar Usuario", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (result != JOptionPane.OK_OPTION) {
                return; // Cierra si se cancela sin borrar datos
            }

            String nombre = txtNombre.getText().trim();
            String apellidos = txtApellidos.getText().trim();
            String userName = txtUserName.getText().trim();
            String correo = txtCorreo.getText().trim();
            String contraseña = new String(txtContraseña.getPassword());

            // Validaciones heredadas
            if (!validarTexto(nombre, 2, 30) || !validarTexto(apellidos, 2, 30)) {
                JOptionPane.showMessageDialog(this, "El nombre y apellidos deben tener entre 2 y 30 caracteres y solo contener letras.", "Error", JOptionPane.ERROR_MESSAGE);
                continue;
            }
            if (!validarCorreo(correo)) {
                JOptionPane.showMessageDialog(this, "Ingrese un correo válido (ejemplo@dominio.com).", "Error", JOptionPane.ERROR_MESSAGE);
                continue;
            }
            if (userName.length() < 5) {
                JOptionPane.showMessageDialog(this, "El username debe tener al menos 5 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
                continue;
            }
            if (contraseña.length() < 8) {
                JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 8 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
                continue;
            }

            // Crear usuario y agregarlo
            Usuario nuevoUsuario = new Usuario(nombre, apellidos, userName, correo, contraseña);
            UsuarioManager.agregarUsuario(nuevoUsuario);
            poblarLaTablaUsuarios();
            datosValidos = true;
        }
    }//GEN-LAST:event_AgregarBtnActionPerformed

    private void EditarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarBtnActionPerformed
        int filaSeleccionada = ListaUsuarios.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un usuario para editar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Usuario usuario = UsuarioManager.getListaUsuarios().get(filaSeleccionada);

        JTextField txtNombre = new JTextField(usuario.getNombre(), 15);
        JTextField txtApellidos = new JTextField(usuario.getApellidos(), 15);
        JTextField txtUserName = new JTextField(usuario.getUserName(), 15);
        JTextField txtCorreo = new JTextField(usuario.getCorreo(), 15);
        JPasswordField txtContraseña = new JPasswordField(usuario.getContraseña(), 15);

        JPanel panel = new JPanel(new GridLayout(0, 2, 10, 10));
        panel.add(new JLabel("Nombre:"));
        panel.add(txtNombre);
        panel.add(new JLabel("Apellidos:"));
        panel.add(txtApellidos);
        panel.add(new JLabel("Username:"));
        panel.add(txtUserName);
        panel.add(new JLabel("Correo:"));
        panel.add(txtCorreo);
        panel.add(new JLabel("Contraseña:"));
        panel.add(txtContraseña);

        int result = JOptionPane.showConfirmDialog(this, panel, "Editar Usuario", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            try {
                usuario.setNombre(txtNombre.getText().trim());
                usuario.setApellidos(txtApellidos.getText().trim());
                usuario.setUserName(txtUserName.getText().trim());
                usuario.setCorreo(txtCorreo.getText().trim());
                usuario.setContraseña(new String(txtContraseña.getPassword()));

                UsuarioManager.editarUsuario(filaSeleccionada, usuario);
                poblarLaTablaUsuarios();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_EditarBtnActionPerformed

    private void EliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarBtnActionPerformed
        int filaSeleccionada = ListaUsuarios.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un usuario para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de que desea eliminar este usuario?",
            "Confirmar Eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            UsuarioManager.eliminarUsuario(filaSeleccionada);
            poblarLaTablaUsuarios();
            JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_EliminarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuariosPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuariosPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuariosPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuariosPantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UsuariosPantalla().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarBtn;
    private javax.swing.JLabel Background;
    private javax.swing.JButton EditarBtn;
    private javax.swing.JButton EliminarBtn;
    private javax.swing.JTable ListaUsuarios;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
